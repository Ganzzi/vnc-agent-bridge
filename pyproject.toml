[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "vnc-agent-bridge"
version = "0.3.0"
description = "Open-source Python package for AI agents to interact with VNC servers"
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.8"
authors = [{ name = "Ganzzi", email = "boinguyen9701@gmail.com" }]
maintainers = [{ name = "Ganzzi", email = "boinguyen9701@gmail.com" }]
keywords = ["vnc", "automation", "ai", "agent", "remote-control"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Networking",
]
dependencies = [
    # No production dependencies - uses only Python standard library
]

[project.urls]
Homepage = "https://github.com/Ganzzi/vnc-agent-bridge"
Repository = "https://github.com/Ganzzi/vnc-agent-bridge"
Issues = "https://github.com/Ganzzi/vnc-agent-bridge/issues"
Documentation = "https://github.com/Ganzzi/vnc-agent-bridge#readme"

[project.optional-dependencies]
capture = ["numpy>=1.20.0", "Pillow>=9.0.0"]
video = ["numpy>=1.20.0", "Pillow>=9.0.0"]
full = ["numpy>=1.20.0", "Pillow>=9.0.0"]
websocket = ["websocket-client>=1.5.0"]
dev = [
    "pytest>=7.0",
    "pytest-cov>=3.0",
    "mypy>=0.990",
    "flake8>=4.0",
    "black>=22.0",
    "numpy>=1.20.0",
    "Pillow>=9.0.0",
]
docs = ["sphinx>=4.0", "sphinx-rtd-theme>=1.0"]

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["vnc_agent_bridge*"]

[tool.setuptools.package-data]
"vnc_agent_bridge" = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_any_unimported = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=vnc_agent_bridge --cov-report=html --cov-report=term-missing"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.coverage.run]
source = ["vnc_agent_bridge"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
